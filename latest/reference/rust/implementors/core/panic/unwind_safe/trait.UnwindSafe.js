(function() {var implementors = {};
implementors["equistore"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/labels/struct.LabelValue.html\" title=\"struct equistore::labels::LabelValue\">LabelValue</a>","synthetic":true,"types":["equistore::labels::LabelValue"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/labels/struct.LabelsBuilder.html\" title=\"struct equistore::labels::LabelsBuilder\">LabelsBuilder</a>","synthetic":true,"types":["equistore::labels::LabelsBuilder"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/labels/struct.Labels.html\" title=\"struct equistore::labels::Labels\">Labels</a>","synthetic":true,"types":["equistore::labels::Labels"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/labels/struct.Iter.html\" title=\"struct equistore::labels::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["equistore::labels::Iter"]},{"text":"impl&lt;'a, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.62.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/labels/struct.FixedSizeIter.html\" title=\"struct equistore::labels::FixedSizeIter\">FixedSizeIter</a>&lt;'a, N&gt;","synthetic":true,"types":["equistore::labels::FixedSizeIter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.eqs_data_origin_t.html\" title=\"struct equistore::eqs_data_origin_t\">eqs_data_origin_t</a>","synthetic":true,"types":["equistore::data::eqs_data_origin_t"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.eqs_array_t.html\" title=\"struct equistore::eqs_array_t\">eqs_array_t</a>","synthetic":true,"types":["equistore::data::eqs_array_t"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.eqs_sample_mapping_t.html\" title=\"struct equistore::eqs_sample_mapping_t\">eqs_sample_mapping_t</a>","synthetic":true,"types":["equistore::data::eqs_sample_mapping_t"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.EmptyArray.html\" title=\"struct equistore::EmptyArray\">EmptyArray</a>","synthetic":true,"types":["equistore::data::EmptyArray"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.BasicBlock.html\" title=\"struct equistore::BasicBlock\">BasicBlock</a>","synthetic":true,"types":["equistore::blocks::BasicBlock"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.TensorBlock.html\" title=\"struct equistore::TensorBlock\">TensorBlock</a>","synthetic":true,"types":["equistore::blocks::TensorBlock"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/struct.TensorBlockRefMut.html\" title=\"struct equistore::TensorBlockRefMut\">TensorBlockRefMut</a>&lt;'a&gt;","synthetic":true,"types":["equistore::blocks::TensorBlockRefMut"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/tensor/struct.Iter.html\" title=\"struct equistore::tensor::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["equistore::tensor::iter::Iter"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/tensor/struct.IterMut.html\" title=\"struct equistore::tensor::IterMut\">IterMut</a>&lt;'a&gt;","synthetic":true,"types":["equistore::tensor::iter::IterMut"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"equistore/tensor/struct.TensorMap.html\" title=\"struct equistore::tensor::TensorMap\">TensorMap</a>","synthetic":true,"types":["equistore::tensor::TensorMap"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"equistore/enum.Error.html\" title=\"enum equistore::Error\">Error</a>","synthetic":true,"types":["equistore::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()